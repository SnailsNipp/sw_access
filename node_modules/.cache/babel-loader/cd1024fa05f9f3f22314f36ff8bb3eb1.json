{"ast":null,"code":"var _jsxFileName = \"/media/srv/data/diplom/web_sw_test_with_datatables/src/UI/menu/DormFloorList/DormFloorList.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { Menu, MenuContent, MenuGroup, MenuList, MenuItem, Divider } from '@patternfly/react-core';\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport \"./DormFloorList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DormSwitch = _ref => {\n  let {\n    name\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(MenuItem, {\n    to: \"#\",\n    itemId: name,\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n};\n_c = DormSwitch;\nexport const DormFloorList = _ref2 => {\n  _s();\n  let {\n    floors\n  } = _ref2;\n  const [activeItem, setActiveItem] = React.useState();\n  const onSelect = (_event, itemId) => {\n    console.log(`clicked ${itemId}`);\n    setActiveItem(itemId);\n  };\n  // Інтерактивні списки комутаторів із групуванням по поверхам\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    className: \"dorm-list\",\n    onSelect: onSelect,\n    activeItemId: activeItem,\n    children: /*#__PURE__*/_jsxDEV(MenuContent, {\n      children: [/*#__PURE__*/_jsxDEV(MenuGroup, {\n        children: /*#__PURE__*/_jsxDEV(MenuList, {\n          children: /*#__PURE__*/_jsxDEV(MenuItem, {\n            to: \"#\",\n            itemId: 0,\n            children: \"Central\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), floors.map((floor, idx) => /*#__PURE__*/_jsxDEV(MenuGroup, {\n        label: floor.name,\n        labelHeadingLevel: \"h3\",\n        children: /*#__PURE__*/_jsxDEV(MenuList, {\n          children: (floor === null || floor === void 0 ? void 0 : floor.switches) && (floor === null || floor === void 0 ? void 0 : floor.switches.map(switchItem => /*#__PURE__*/_jsxDEV(DormSwitch, {\n            ...switchItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(DormFloorList, \"bNsD/rUNTbDQRn+NP6rdDtPLdu0=\");\n_c2 = DormFloorList;\nvar _c, _c2;\n$RefreshReg$(_c, \"DormSwitch\");\n$RefreshReg$(_c2, \"DormFloorList\");","map":{"version":3,"names":["React","Menu","MenuContent","MenuGroup","MenuList","MenuItem","Divider","jsxDEV","_jsxDEV","DormSwitch","_ref","name","to","itemId","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","DormFloorList","_ref2","_s","floors","activeItem","setActiveItem","useState","onSelect","_event","console","log","className","activeItemId","map","floor","idx","label","labelHeadingLevel","switches","switchItem","_c2","$RefreshReg$"],"sources":["/media/srv/data/diplom/web_sw_test_with_datatables/src/UI/menu/DormFloorList/DormFloorList.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Menu, MenuContent, MenuGroup, MenuList, MenuItem, Divider } from '@patternfly/react-core';\r\nimport \"@patternfly/react-core/dist/styles/base.css\";\r\nimport \"./DormFloorList.css\";\r\nimport {FC} from \"react\";\r\nimport {IFloor, ISwitch} from \"../../../core/models\";\r\n\r\nexport const DormSwitch: FC<ISwitch> = ({ name }) => {\r\n    return <MenuItem to=\"#\" itemId={name}>{ name }</MenuItem>\r\n}\r\n\r\nexport const DormFloorList: FC<{ floors: IFloor[] }> = ({ floors }) => {\r\n    const [activeItem, setActiveItem] = React.useState<string | number | undefined>();\r\n    const onSelect = (_event: React.MouseEvent<Element, MouseEvent> | undefined, itemId: string | number | undefined) => {\r\n        console.log(`clicked ${itemId}`);\r\n        setActiveItem(itemId);\r\n    };\r\n// Інтерактивні списки комутаторів із групуванням по поверхам\r\n    return (\r\n        <Menu className=\"dorm-list\" onSelect={onSelect} activeItemId={activeItem}>\r\n            <MenuContent>\r\n                {/*група*/}\r\n                <MenuGroup>\r\n                    {/*список елементів групи*/}\r\n                    <MenuList>\r\n                        {/*елемент групи із посиланням на дію\\сторінку\\тощо*/}\r\n                        <MenuItem to=\"#\" itemId={0}>\r\n                            Central\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </MenuGroup>\r\n                {/*гарна полосочка*/}\r\n                <Divider />\r\n                {floors.map((floor, idx) =>\r\n                    <MenuGroup label={floor.name} labelHeadingLevel=\"h3\">\r\n                        <MenuList>\r\n                            {floor?.switches && floor?.switches.map(switchItem =>\r\n                                <DormSwitch {...switchItem} />)}\r\n                        </MenuList>\r\n                    </MenuGroup>\r\n                )}\r\n            </MenuContent>\r\n        </Menu>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}