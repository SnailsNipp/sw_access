{"ast":null,"code":"var _jsxFileName = \"/media/srv/data/diplom/web_sw_test_with_datatables/src/ui/menu/DormFloorList/DormFloorList.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { Menu, MenuContent, MenuGroup, MenuList, MenuItem, Divider } from '@patternfly/react-core';\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport \"./DormFloorList.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DormSwitch = _ref => {\n  let {\n    name,\n    id\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(MenuItem, {\n    itemId: id,\n    children: /*#__PURE__*/_jsxDEV(NavLink, {\n      to: `/switch/${id}`,\n      replace: true,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n};\n_c = DormSwitch;\nexport const DormFloorList = _ref2 => {\n  _s();\n  let {\n    floors\n  } = _ref2;\n  const [activeItem, setActiveItem] = React.useState();\n  const onSelect = (_event, itemId) => {\n    console.log(`clicked ${itemId}`);\n    setActiveItem(itemId);\n  };\n  // Інтерактивні списки комутаторів із групуванням по поверхам\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    className: \"dorm-list\",\n    onSelect: onSelect,\n    activeItemId: activeItem,\n    children: /*#__PURE__*/_jsxDEV(MenuContent, {\n      children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), floors.map((floor, idx) => {\n        if (!(floor !== null && floor !== void 0 && floor.switches)) {\n          return /*#__PURE__*/_jsxDEV(MenuGroup, {\n            children: /*#__PURE__*/_jsxDEV(MenuList, {\n              children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                to: \"/switch/central\",\n                itemId: 0,\n                children: \"Central\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 32\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(MenuGroup, {\n          label: `Floor ${floor.floorNumber}`,\n          labelHeadingLevel: \"h3\",\n          children: /*#__PURE__*/_jsxDEV(MenuList, {\n            children: (floor === null || floor === void 0 ? void 0 : floor.switches) && (floor === null || floor === void 0 ? void 0 : floor.switches.map((switchItem, idx) => /*#__PURE__*/_jsxDEV(DormSwitch, {\n              ...switchItem\n            }, switchItem.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this)))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(DormFloorList, \"bNsD/rUNTbDQRn+NP6rdDtPLdu0=\");\n_c2 = DormFloorList;\nvar _c, _c2;\n$RefreshReg$(_c, \"DormSwitch\");\n$RefreshReg$(_c2, \"DormFloorList\");","map":{"version":3,"names":["React","Menu","MenuContent","MenuGroup","MenuList","MenuItem","Divider","NavLink","jsxDEV","_jsxDEV","DormSwitch","_ref","name","id","itemId","children","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","DormFloorList","_ref2","_s","floors","activeItem","setActiveItem","useState","onSelect","_event","console","log","className","activeItemId","map","floor","idx","switches","label","floorNumber","labelHeadingLevel","switchItem","_c2","$RefreshReg$"],"sources":["/media/srv/data/diplom/web_sw_test_with_datatables/src/ui/menu/DormFloorList/DormFloorList.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Menu, MenuContent, MenuGroup, MenuList, MenuItem, Divider } from '@patternfly/react-core';\r\nimport \"@patternfly/react-core/dist/styles/base.css\";\r\nimport \"./DormFloorList.css\";\r\nimport {FC} from \"react\";\r\nimport {IFloor, ISwitch} from \"../../../core/models\";\r\nimport {NavLink} from \"react-router-dom\";\r\nexport const DormSwitch: FC<ISwitch> = ({ name, id}) => {\r\n    return <MenuItem itemId={id}>\r\n        <NavLink to={`/switch/${id}`} replace>\r\n            { name }\r\n        </NavLink>\r\n    </MenuItem>\r\n}\r\n\r\nexport const DormFloorList: FC<{ floors: IFloor[] }> = ({ floors }) => {\r\n    const [activeItem, setActiveItem] = React.useState<string | number | undefined>();\r\n    const onSelect = (_event: React.MouseEvent<Element, MouseEvent> | undefined, itemId: string | number | undefined) => {\r\n        console.log(`clicked ${itemId}`);\r\n        setActiveItem(itemId);\r\n    };\r\n// Інтерактивні списки комутаторів із групуванням по поверхам\r\n    return (\r\n        <Menu className=\"dorm-list\" onSelect={onSelect} activeItemId={activeItem}>\r\n            <MenuContent>\r\n                {/*група*/}\r\n                {/*гарна полосочка*/}\r\n                <Divider />\r\n                {floors.map((floor, idx) => {\r\n                    if (!floor?.switches) {\r\n                        return <MenuGroup key={idx}>\r\n                            {/*список елементів групи*/}\r\n                            <MenuList>\r\n                                {/*елемент групи із посиланням на дію\\сторінку\\тощо*/}\r\n                                <MenuItem to=\"/switch/central\" itemId={0}>\r\n                                    Central\r\n                                </MenuItem>\r\n                            </MenuList>\r\n                        </MenuGroup>\r\n                    }\r\n                    return <MenuGroup label={`Floor ${floor.floorNumber}`} labelHeadingLevel=\"h3\" key={idx}>\r\n                        <MenuList>\r\n                            {floor?.switches && floor?.switches.map((switchItem, idx) =>\r\n                                <DormSwitch key={switchItem.id} {...switchItem} />)}\r\n                        </MenuList>\r\n                    </MenuGroup>\r\n                    }\r\n                )}\r\n            </MenuContent>\r\n        </Menu>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}