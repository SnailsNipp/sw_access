{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DualListSelector/dual-list-selector';\nimport { DualListSelectorTreeItem } from './DualListSelectorTreeItem';\nexport const DualListSelectorTree = _a => {\n  var {\n      data,\n      hasBadges = false,\n      isNested = false,\n      defaultAllExpanded = false,\n      onOptionCheck,\n      isDisabled = false\n    } = _a,\n    props = __rest(_a, [\"data\", \"hasBadges\", \"isNested\", \"defaultAllExpanded\", \"onOptionCheck\", \"isDisabled\"]);\n  const dataToRender = typeof data === 'function' ? data() : data;\n  const tree = dataToRender.map(item => React.createElement(DualListSelectorTreeItem, Object.assign({\n    key: item.id,\n    text: item.text,\n    id: item.id,\n    defaultExpanded: item.defaultExpanded !== undefined ? item.defaultExpanded : defaultAllExpanded,\n    onOptionCheck: onOptionCheck,\n    isChecked: item.isChecked,\n    checkProps: item.checkProps,\n    hasBadge: item.hasBadge !== undefined ? item.hasBadge : hasBadges,\n    badgeProps: item.badgeProps,\n    itemData: item,\n    isDisabled: isDisabled,\n    useMemo: true\n  }, item.children && {\n    children: React.createElement(DualListSelectorTree, {\n      isNested: true,\n      data: item.children,\n      hasBadges: hasBadges,\n      defaultAllExpanded: defaultAllExpanded,\n      onOptionCheck: onOptionCheck,\n      isDisabled: isDisabled\n    })\n  })));\n  return isNested ? React.createElement(\"ul\", Object.assign({\n    className: css(styles.dualListSelectorList),\n    role: \"group\"\n  }, props), tree) : React.createElement(React.Fragment, null, tree);\n};\nDualListSelectorTree.displayName = 'DualListSelectorTree';","map":{"version":3,"names":["React","css","styles","DualListSelectorTreeItem","DualListSelectorTree","_a","data","hasBadges","isNested","defaultAllExpanded","onOptionCheck","isDisabled","props","__rest","dataToRender","tree","map","item","createElement","Object","assign","key","id","text","defaultExpanded","undefined","isChecked","checkProps","hasBadge","badgeProps","itemData","useMemo","children","className","dualListSelectorList","role","Fragment","displayName"],"sources":["../../../../src/components/DualListSelector/DualListSelectorTree.tsx"],"sourcesContent":[null],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,6EAA6E;AAChG,SAASC,wBAAwB,QAAQ,4BAA4B;AA2DrE,OAAO,MAAMC,oBAAoB,GAAwDC,EAQ7D,IAAI;MARyD;MACvFC,IAAI;MACJC,SAAS,GAAG,KAAK;MACjBC,QAAQ,GAAG,KAAK;MAChBC,kBAAkB,GAAG,KAAK;MAC1BC,aAAa;MACbC,UAAU,GAAG;IAAK,IAAAN,EAEQ;IADvBO,KAAK,GAAAC,MAAA,CAAAR,EAAA,EAP+E,sFAQxF,CADS;EAER,MAAMS,YAAY,GAAG,OAAOR,IAAI,KAAK,UAAU,GAAGA,IAAI,EAAE,GAAGA,IAAI;EAC/D,MAAMS,IAAI,GAAGD,YAAY,CAACE,GAAG,CAACC,IAAI,IAChCjB,KAAA,CAAAkB,aAAA,CAACf,wBAAwB,EAAAgB,MAAA,CAAAC,MAAA;IACvBC,GAAG,EAAEJ,IAAI,CAACK,EAAE;IACZC,IAAI,EAAEN,IAAI,CAACM,IAAI;IACfD,EAAE,EAAEL,IAAI,CAACK,EAAE;IACXE,eAAe,EAAEP,IAAI,CAACO,eAAe,KAAKC,SAAS,GAAGR,IAAI,CAACO,eAAe,GAAGf,kBAAkB;IAC/FC,aAAa,EAAEA,aAAa;IAC5BgB,SAAS,EAAET,IAAI,CAACS,SAAS;IACzBC,UAAU,EAAEV,IAAI,CAACU,UAAU;IAC3BC,QAAQ,EAAEX,IAAI,CAACW,QAAQ,KAAKH,SAAS,GAAGR,IAAI,CAACW,QAAQ,GAAGrB,SAAS;IACjEsB,UAAU,EAAEZ,IAAI,CAACY,UAAU;IAC3BC,QAAQ,EAAEb,IAAI;IACdN,UAAU,EAAEA,UAAU;IACtBoB,OAAO,EAAE;EAAI,GACRd,IAAI,CAACe,QAAQ,IAAI;IACpBA,QAAQ,EACNhC,KAAA,CAAAkB,aAAA,CAACd,oBAAoB;MACnBI,QAAQ;MACRF,IAAI,EAAEW,IAAI,CAACe,QAAQ;MACnBzB,SAAS,EAAEA,SAAS;MACpBE,kBAAkB,EAAEA,kBAAkB;MACtCC,aAAa,EAAEA,aAAa;MAC5BC,UAAU,EAAEA;IAAU;GAG1B,EAEL,CAAC;EACF,OAAOH,QAAQ,GACbR,KAAA,CAAAkB,aAAA,OAAAC,MAAA,CAAAC,MAAA;IAAIa,SAAS,EAAEhC,GAAG,CAACC,MAAM,CAACgC,oBAAoB,CAAC;IAAEC,IAAI,EAAC;EAAO,GAAKvB,KAAK,GACpEG,IAAI,CACF,GAELf,KAAA,CAAAkB,aAAA,CAAAlB,KAAA,CAAAoC,QAAA,QAAGrB,IAAI,CACR;AACH,CAAC;AAEDX,oBAAoB,CAACiC,WAAW,GAAG,sBAAsB"},"metadata":{},"sourceType":"module"}