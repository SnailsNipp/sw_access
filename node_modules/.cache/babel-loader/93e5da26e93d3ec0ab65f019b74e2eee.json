{"ast":null,"code":"import { SIDES } from \"../models\";\nexport const SWITCH_IDS_COLLECTION = {\n  LEFT: 'left',\n  RIGHT: 'right'\n};\nexport const FLOOR_IDS_COLLECTION = {\n  CENTRAL: 'central',\n  FLOOR_1: 'floor-1',\n  FLOOR_2: 'floor-2',\n  FLOOR_3: 'floor-3'\n};\nexport const switchesMock = {\n  [SWITCH_IDS_COLLECTION.LEFT]: {\n    name: \"Floor 1 Left\",\n    id: SWITCH_IDS_COLLECTION.LEFT,\n    addr_ipv4: \"192.168.***.***\",\n    telnet: \"yes/no\",\n    model: \"sample model switch\",\n    sample_element: \"sample_data\",\n    side: SIDES.LEFT\n  },\n  [SWITCH_IDS_COLLECTION.RIGHT]: {\n    name: \"Floor 1 Right\",\n    id: SWITCH_IDS_COLLECTION.RIGHT,\n    addr_ipv4: \"192.168.***.***\",\n    telnet: \"yes/no\",\n    model: \"sample model switch\",\n    sample_element: \"sample_data\",\n    side: SIDES.RIGHT\n  }\n};\nexport const floorsMock = {\n  [FLOOR_IDS_COLLECTION.CENTRAL]: {\n    name: \"Central\",\n    id: FLOOR_IDS_COLLECTION.CENTRAL,\n    addr_ipv4: \"192.168.***.***\",\n    telnet: \"yes/no\",\n    model: \"sample model switch\",\n    sample_element: \"sample_data\"\n  },\n  [FLOOR_IDS_COLLECTION.FLOOR_1]: {\n    name: \"Floor 1\",\n    id: FLOOR_IDS_COLLECTION.FLOOR_1,\n    switches: [switchesMock[SWITCH_IDS_COLLECTION.LEFT], switchesMock[SWITCH_IDS_COLLECTION.RIGHT]]\n  },\n  [FLOOR_IDS_COLLECTION.FLOOR_2]: {\n    name: \"Floor 1\",\n    id: FLOOR_IDS_COLLECTION.FLOOR_2,\n    switches: [switchesMock[SWITCH_IDS_COLLECTION.LEFT], switchesMock[SWITCH_IDS_COLLECTION.RIGHT]]\n  },\n  [FLOOR_IDS_COLLECTION.FLOOR_3]: {\n    name: \"Floor 1\",\n    id: FLOOR_IDS_COLLECTION.FLOOR_3,\n    switches: [switchesMock[SWITCH_IDS_COLLECTION.LEFT], switchesMock[SWITCH_IDS_COLLECTION.RIGHT]]\n  }\n};\nexport default [{\n  name: \"Dorm1\",\n  id: 'dorm-1',\n  floors: [floorsMock[FLOOR_IDS_COLLECTION.CENTRAL], floorsMock[FLOOR_IDS_COLLECTION.FLOOR_1], floorsMock[FLOOR_IDS_COLLECTION.FLOOR_2], floorsMock[FLOOR_IDS_COLLECTION.FLOOR_3]]\n}, {\n  name: \"Dorm2\",\n  id: 'dorm-2',\n  floors: [floorsMock[FLOOR_IDS_COLLECTION.CENTRAL], floorsMock[FLOOR_IDS_COLLECTION.FLOOR_1], floorsMock[FLOOR_IDS_COLLECTION.FLOOR_2], floorsMock[FLOOR_IDS_COLLECTION.FLOOR_3]]\n}];","map":{"version":3,"names":["SIDES","SWITCH_IDS_COLLECTION","LEFT","RIGHT","FLOOR_IDS_COLLECTION","CENTRAL","FLOOR_1","FLOOR_2","FLOOR_3","switchesMock","name","id","addr_ipv4","telnet","model","sample_element","side","floorsMock","switches","floors"],"sources":["/media/srv/data/diplom/web_sw_test_with_datatables/src/core/mocks/dormMock.ts"],"sourcesContent":["import { IDorm, SIDES } from \"../models\";\nexport const SWITCH_IDS_COLLECTION = {\n    LEFT: 'left',\n    RIGHT: 'right'\n}\nexport const FLOOR_IDS_COLLECTION = {\n    CENTRAL: 'central',\n    FLOOR_1: 'floor-1',\n    FLOOR_2: 'floor-2',\n    FLOOR_3: 'floor-3',\n}\n\nexport const switchesMock = {\n    [SWITCH_IDS_COLLECTION.LEFT]: {\n        name: \"Floor 1 Left\",\n        id: SWITCH_IDS_COLLECTION.LEFT,\n        addr_ipv4: \"192.168.***.***\",\n        telnet: \"yes/no\",\n        model: \"sample model switch\",\n        sample_element: \"sample_data\",\n        side: SIDES.LEFT\n    },\n    [SWITCH_IDS_COLLECTION.RIGHT]: {\n        name: \"Floor 1 Right\",\n        id: SWITCH_IDS_COLLECTION.RIGHT,\n        addr_ipv4: \"192.168.***.***\",\n        telnet: \"yes/no\",\n        model: \"sample model switch\",\n        sample_element: \"sample_data\",\n        side: SIDES.RIGHT\n    }\n}\nexport const floorsMock = {\n    [FLOOR_IDS_COLLECTION.CENTRAL]: {\n        name: \"Central\",\n        id: FLOOR_IDS_COLLECTION.CENTRAL,\n        addr_ipv4: \"192.168.***.***\",\n        telnet: \"yes/no\",\n        model: \"sample model switch\",\n        sample_element: \"sample_data\"\n    },\n    [FLOOR_IDS_COLLECTION.FLOOR_1]: {\n        name: \"Floor 1\",\n        id: FLOOR_IDS_COLLECTION.FLOOR_1,\n        switches: [\n            switchesMock[SWITCH_IDS_COLLECTION.LEFT],\n            switchesMock[SWITCH_IDS_COLLECTION.RIGHT]\n        ]\n    },\n    [FLOOR_IDS_COLLECTION.FLOOR_2]: {\n        name: \"Floor 1\",\n        id: FLOOR_IDS_COLLECTION.FLOOR_2,\n        switches: [\n            switchesMock[SWITCH_IDS_COLLECTION.LEFT],\n            switchesMock[SWITCH_IDS_COLLECTION.RIGHT]\n        ]\n    },\n    [FLOOR_IDS_COLLECTION.FLOOR_3]: {\n        name: \"Floor 1\",\n        id: FLOOR_IDS_COLLECTION.FLOOR_3,\n        switches: [\n            switchesMock[SWITCH_IDS_COLLECTION.LEFT],\n            switchesMock[SWITCH_IDS_COLLECTION.RIGHT]\n        ]\n    },\n};\n\nexport default [\n    {\n        name: \"Dorm1\",\n        id: 'dorm-1',\n        floors: [\n            floorsMock[FLOOR_IDS_COLLECTION.CENTRAL],\n            floorsMock[FLOOR_IDS_COLLECTION.FLOOR_1],\n            floorsMock[FLOOR_IDS_COLLECTION.FLOOR_2],\n            floorsMock[FLOOR_IDS_COLLECTION.FLOOR_3],\n        ]\n    },\n    {\n        name: \"Dorm2\",\n        id: 'dorm-2',\n        floors: [\n            floorsMock[FLOOR_IDS_COLLECTION.CENTRAL],\n            floorsMock[FLOOR_IDS_COLLECTION.FLOOR_1],\n            floorsMock[FLOOR_IDS_COLLECTION.FLOOR_2],\n            floorsMock[FLOOR_IDS_COLLECTION.FLOOR_3],\n        ]\n    },\n] as IDorm[]"],"mappings":"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"},"metadata":{},"sourceType":"module"}