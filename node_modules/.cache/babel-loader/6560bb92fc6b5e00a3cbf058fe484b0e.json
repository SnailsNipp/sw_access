{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport dormMock from \"../../core/mocks/dormMock\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SwitchDetails = () => {\n  _s();\n  const [switchItem, setSwitchItem] = useState();\n  const {\n    dormId,\n    floorId,\n    switchId\n  } = useParams();\n  useEffect(() => {\n    const foundedDorm = dormMock.find(dorm => dorm.id === dormId);\n    const foundedFloor = foundedDorm === null || foundedDorm === void 0 ? void 0 : foundedDorm.floors.find(floor => floor.id === floorId);\n    const foundedSwitch = foundedFloor === null || foundedFloor === void 0 ? void 0 : foundedFloor.switches.find(switchItem => switchItem.id === switchId);\n    setSwitchItem(foundedSwitch);\n  }, [dormId, floorId, switchId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"IP \", switchItem === null || switchItem === void 0 ? void 0 : switchItem.addr_ipv4]\n  }, void 0, true);\n};\n_s(SwitchDetails, \"udQX+mfVBRZIJ2kXhJhJ1XdUsPw=\", false, function () {\n  return [useParams];\n});\n_c = SwitchDetails;\nvar _c;\n$RefreshReg$(_c, \"SwitchDetails\");","map":{"version":3,"names":["useParams","useEffect","useState","dormMock","Fragment","_Fragment","jsxDEV","_jsxDEV","SwitchDetails","_s","switchItem","setSwitchItem","dormId","floorId","switchId","foundedDorm","find","dorm","id","foundedFloor","floors","floor","foundedSwitch","switches","children","addr_ipv4","_c","$RefreshReg$"],"sources":["/media/srv/data/diplom/web_sw_test_with_datatables/src/pages/SwitchDetails/SwitchDetails.tsx"],"sourcesContent":["import {useParams} from \"react-router-dom\";\nimport {useEffect, useState} from \"react\";\nimport {ISwitch} from \"../../core/models\";\nimport dormMock from \"../../core/mocks/dormMock\";\n\nexport const SwitchDetails = () => {\n    const [switchItem, setSwitchItem] = useState<ISwitch | undefined>();\n    const { dormId, floorId, switchId } = useParams();\n    useEffect(() => {\n        const foundedDorm = dormMock.find(dorm => dorm.id === dormId);\n        const foundedFloor = foundedDorm?.floors.find(floor => floor.id === floorId);\n        const foundedSwitch = foundedFloor?.switches.find(switchItem => switchItem.id === switchId);\n        setSwitchItem(foundedSwitch);\n    }, [dormId, floorId, switchId])\n    return <>\n        IP {switchItem?.addr_ipv4}\n    </>\n}"],"mappings":";AAAA,SAAQA,SAAS,QAAO,kBAAkB;AAC1C,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEzC,OAAOC,QAAQ,MAAM,2BAA2B;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAsB,CAAC;EACnE,MAAM;IAAEU,MAAM;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAGd,SAAS,CAAC,CAAC;EACjDC,SAAS,CAAC,MAAM;IACZ,MAAMc,WAAW,GAAGZ,QAAQ,CAACa,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAAC;IAC7D,MAAMO,YAAY,GAAGJ,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEK,MAAM,CAACJ,IAAI,CAACK,KAAK,IAAIA,KAAK,CAACH,EAAE,KAAKL,OAAO,CAAC;IAC5E,MAAMS,aAAa,GAAGH,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEI,QAAQ,CAACP,IAAI,CAACN,UAAU,IAAIA,UAAU,CAACQ,EAAE,KAAKJ,QAAQ,CAAC;IAC3FH,aAAa,CAACW,aAAa,CAAC;EAChC,CAAC,EAAE,CAACV,MAAM,EAAEC,OAAO,EAAEC,QAAQ,CAAC,CAAC;EAC/B,oBAAOP,OAAA,CAAAF,SAAA;IAAAmB,QAAA,GAAE,KACF,EAACd,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEe,SAAS;EAAA,eAC3B,CAAC;AACP,CAAC;AAAAhB,EAAA,CAZYD,aAAa;EAAA,QAEgBR,SAAS;AAAA;AAAA0B,EAAA,GAFtClB,aAAa;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}