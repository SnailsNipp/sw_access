{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/NotificationDrawer/notification-drawer';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport { Text, TextVariants } from '../Text';\nimport { Button, ButtonVariant } from '../Button';\nexport const NotificationDrawerHeader = _a => {\n  var {\n      children,\n      className = '',\n      count,\n      closeButtonAriaLabel = 'Close',\n      customText,\n      onClose,\n      title = 'Notifications',\n      unreadText = 'unread'\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"count\", \"closeButtonAriaLabel\", \"customText\", \"onClose\", \"title\", \"unreadText\"]);\n  return React.createElement(\"div\", Object.assign({}, props, {\n    className: css(styles.notificationDrawerHeader, className)\n  }), React.createElement(Text, {\n    component: TextVariants.h1,\n    className: css(styles.notificationDrawerHeaderTitle)\n  }, title), (customText !== undefined || count !== undefined) && React.createElement(\"span\", {\n    className: css(styles.notificationDrawerHeaderStatus)\n  }, customText || `${count} ${unreadText}`), (children || onClose) && React.createElement(\"div\", {\n    className: css(styles.notificationDrawerHeaderAction)\n  }, children, onClose && React.createElement(\"div\", null, React.createElement(Button, {\n    variant: ButtonVariant.plain,\n    \"aria-label\": closeButtonAriaLabel,\n    onClick: onClose\n  }, React.createElement(TimesIcon, {\n    \"aria-hidden\": \"true\"\n  })))));\n};\nNotificationDrawerHeader.displayName = 'NotificationDrawerHeader';","map":{"version":3,"names":["React","css","styles","TimesIcon","Text","TextVariants","Button","ButtonVariant","NotificationDrawerHeader","_a","children","className","count","closeButtonAriaLabel","customText","onClose","title","unreadText","props","__rest","createElement","Object","assign","notificationDrawerHeader","component","h1","notificationDrawerHeaderTitle","undefined","notificationDrawerHeaderStatus","notificationDrawerHeaderAction","variant","plain","onClick","displayName"],"sources":["../../../../src/components/NotificationDrawer/NotificationDrawerHeader.tsx"],"sourcesContent":[null],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,gFAAgF;AACnG,OAAOC,SAAS,MAAM,mDAAmD;AAEzE,SAASC,IAAI,EAAEC,YAAY,QAAQ,SAAS;AAC5C,SAASC,MAAM,EAAEC,aAAa,QAAQ,WAAW;AAqBjD,OAAO,MAAMC,wBAAwB,GAA4DC,EAUjE,IAAI;MAV6D;MAC/FC,QAAQ;MACRC,SAAS,GAAG,EAAE;MACdC,KAAK;MACLC,oBAAoB,GAAG,OAAO;MAC9BC,UAAU;MACVC,OAAO;MACPC,KAAK,GAAG,eAAe;MACvBC,UAAU,GAAG;IAAQ,IAAAR,EAES;IAD3BS,KAAK,GAAAC,MAAA,CAAAV,EAAA,EATuF,0GAUhG,CADS;EAC2B,OACnCT,KAAA,CAAAoB,aAAA,QAAAC,MAAA,CAAAC,MAAA,KAASJ,KAAK;IAAEP,SAAS,EAAEV,GAAG,CAACC,MAAM,CAACqB,wBAAwB,EAAEZ,SAAS;EAAC,IACxEX,KAAA,CAAAoB,aAAA,CAAChB,IAAI;IAACoB,SAAS,EAAEnB,YAAY,CAACoB,EAAE;IAAEd,SAAS,EAAEV,GAAG,CAACC,MAAM,CAACwB,6BAA6B;EAAC,GACnFV,KAAK,CACD,EACN,CAACF,UAAU,KAAKa,SAAS,IAAIf,KAAK,KAAKe,SAAS,KAC/C3B,KAAA,CAAAoB,aAAA;IAAMT,SAAS,EAAEV,GAAG,CAACC,MAAM,CAAC0B,8BAA8B;EAAC,GAAGd,UAAU,IAAI,GAAGF,KAAK,IAAIK,UAAU,EAAE,CACrG,EACA,CAACP,QAAQ,IAAIK,OAAO,KACnBf,KAAA,CAAAoB,aAAA;IAAKT,SAAS,EAAEV,GAAG,CAACC,MAAM,CAAC2B,8BAA8B;EAAC,GACvDnB,QAAQ,EACRK,OAAO,IACNf,KAAA,CAAAoB,aAAA,cACEpB,KAAA,CAAAoB,aAAA,CAACd,MAAM;IAACwB,OAAO,EAAEvB,aAAa,CAACwB,KAAK;IAAA,cAAclB,oBAAoB;IAAEmB,OAAO,EAAEjB;EAAO,GACtFf,KAAA,CAAAoB,aAAA,CAACjB,SAAS;IAAA,eAAa;EAAM,EAAG,CACzB,CAEZ,CAEJ,CACG;CACP;AACDK,wBAAwB,CAACyB,WAAW,GAAG,0BAA0B"},"metadata":{},"sourceType":"module"}