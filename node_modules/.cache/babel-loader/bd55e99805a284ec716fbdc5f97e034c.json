{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/ToggleGroup/toggle-group';\nimport { ToggleGroupItemVariant, ToggleGroupItemElement } from './ToggleGroupItemElement';\nexport const ToggleGroupItem = _a => {\n  var {\n      text,\n      icon,\n      className,\n      isDisabled = false,\n      isSelected = false,\n      'aria-label': ariaLabel = '',\n      onChange = () => {},\n      buttonId = ''\n    } = _a,\n    props = __rest(_a, [\"text\", \"icon\", \"className\", \"isDisabled\", \"isSelected\", 'aria-label', \"onChange\", \"buttonId\"]);\n  const handleChange = event => {\n    onChange(!isSelected, event);\n  };\n  if (!ariaLabel && icon && !text) {\n    /* eslint-disable no-console */\n    console.warn('An accessible aria-label is required when using the toggle group item icon variant.');\n  }\n  return React.createElement(\"div\", Object.assign({\n    className: css(styles.toggleGroupItem, className)\n  }, props), React.createElement(\"button\", Object.assign({\n    type: \"button\",\n    className: css(styles.toggleGroupButton, isSelected && styles.modifiers.selected),\n    \"aria-pressed\": isSelected,\n    onClick: handleChange\n  }, ariaLabel && {\n    'aria-label': ariaLabel\n  }, isDisabled && {\n    disabled: true\n  }, buttonId && {\n    id: buttonId\n  }), icon ? React.createElement(ToggleGroupItemElement, {\n    variant: ToggleGroupItemVariant.icon\n  }, icon) : null, text ? React.createElement(ToggleGroupItemElement, {\n    variant: ToggleGroupItemVariant.text\n  }, text) : null));\n};\nToggleGroupItem.displayName = 'ToggleGroupItem';","map":{"version":3,"names":["React","css","styles","ToggleGroupItemVariant","ToggleGroupItemElement","ToggleGroupItem","_a","text","icon","className","isDisabled","isSelected","ariaLabel","onChange","buttonId","props","__rest","handleChange","event","console","warn","createElement","Object","assign","toggleGroupItem","type","toggleGroupButton","modifiers","selected","onClick","disabled","id","variant","displayName"],"sources":["../../../../src/components/ToggleGroup/ToggleGroupItem.tsx"],"sourcesContent":[null],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,kEAAkE;AACrF,SAASC,sBAAsB,EAAEC,sBAAsB,QAAQ,0BAA0B;AAqBzF,OAAO,MAAMC,eAAe,GAAmDC,EAUxD,IAAI;MAVoD;MAC7EC,IAAI;MACJC,IAAI;MACJC,SAAS;MACTC,UAAU,GAAG,KAAK;MAClBC,UAAU,GAAG,KAAK;MAClB,YAAY,EAAEC,SAAS,GAAG,EAAE;MAC5BC,QAAQ,GAAGA,CAAA,KAAK,CAAE,CAAC;MACnBC,QAAQ,GAAG;IAAE,IAAAR,EAEQ;IADlBS,KAAK,GAAAC,MAAA,CAAAV,EAAA,EATqE,+FAU9E,CADS;EAER,MAAMW,YAAY,GAAIC,KAAU,IAAU;IACxCL,QAAQ,CAAC,CAACF,UAAU,EAAEO,KAAK,CAAC;EAC9B,CAAC;EAED,IAAI,CAACN,SAAS,IAAIJ,IAAI,IAAI,CAACD,IAAI,EAAE;IAC/B;IACAY,OAAO,CAACC,IAAI,CAAC,qFAAqF,CAAC;;EAGrG,OACEpB,KAAA,CAAAqB,aAAA,QAAAC,MAAA,CAAAC,MAAA;IAAKd,SAAS,EAAER,GAAG,CAACC,MAAM,CAACsB,eAAe,EAAEf,SAAS;EAAC,GAAMM,KAAK,GAC/Df,KAAA,CAAAqB,aAAA,WAAAC,MAAA,CAAAC,MAAA;IACEE,IAAI,EAAC,QAAQ;IACbhB,SAAS,EAAER,GAAG,CAACC,MAAM,CAACwB,iBAAiB,EAAEf,UAAU,IAAIT,MAAM,CAACyB,SAAS,CAACC,QAAQ,CAAC;IAAA,gBACnEjB,UAAU;IACxBkB,OAAO,EAAEZ;EAAY,GAChBL,SAAS,IAAI;IAAE,YAAY,EAAEA;EAAS,CAAE,EACxCF,UAAU,IAAI;IAAEoB,QAAQ,EAAE;EAAI,CAAE,EAChChB,QAAQ,IAAI;IAAEiB,EAAE,EAAEjB;EAAQ,CAAG,GAEjCN,IAAI,GAAGR,KAAA,CAAAqB,aAAA,CAACjB,sBAAsB;IAAC4B,OAAO,EAAE7B,sBAAsB,CAACK;EAAI,GAAGA,IAAI,CAA0B,GAAG,IAAI,EAC3GD,IAAI,GAAGP,KAAA,CAAAqB,aAAA,CAACjB,sBAAsB;IAAC4B,OAAO,EAAE7B,sBAAsB,CAACI;EAAI,GAAGA,IAAI,CAA0B,GAAG,IAAI,CACrG,CACL;AAEV,CAAC;AACDF,eAAe,CAAC4B,WAAW,GAAG,iBAAiB"},"metadata":{},"sourceType":"module"}