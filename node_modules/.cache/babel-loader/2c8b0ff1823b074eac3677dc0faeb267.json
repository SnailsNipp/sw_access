{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Button, ButtonVariant } from '../Button';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/NotificationBadge/notification-badge';\nimport AttentionBellIcon from '@patternfly/react-icons/dist/esm/icons/attention-bell-icon';\nimport BellIcon from '@patternfly/react-icons/dist/esm/icons/bell-icon';\nexport var NotificationBadgeVariant;\n(function (NotificationBadgeVariant) {\n  NotificationBadgeVariant[\"read\"] = \"read\";\n  NotificationBadgeVariant[\"unread\"] = \"unread\";\n  NotificationBadgeVariant[\"attention\"] = \"attention\";\n})(NotificationBadgeVariant || (NotificationBadgeVariant = {}));\nexport const NotificationBadge = _a => {\n  var {\n      isRead,\n      children,\n      variant = isRead ? 'read' : 'unread',\n      count = 0,\n      attentionIcon = React.createElement(AttentionBellIcon, null),\n      icon = React.createElement(BellIcon, null),\n      className,\n      isExpanded = false\n    } = _a,\n    props = __rest(_a, [\"isRead\", \"children\", \"variant\", \"count\", \"attentionIcon\", \"icon\", \"className\", \"isExpanded\"]);\n  let notificationChild = icon;\n  if (children !== undefined) {\n    notificationChild = children;\n  } else if (variant === NotificationBadgeVariant.attention) {\n    notificationChild = attentionIcon;\n  }\n  return React.createElement(Button, Object.assign({\n    variant: ButtonVariant.plain,\n    className: className,\n    \"aria-expanded\": isExpanded\n  }, props), React.createElement(\"span\", {\n    className: css(styles.notificationBadge, styles.modifiers[variant], isExpanded && styles.modifiers.expanded)\n  }, notificationChild, count > 0 && React.createElement(\"span\", {\n    className: css(styles.notificationBadgeCount)\n  }, count)));\n};\nNotificationBadge.displayName = 'NotificationBadge';","map":{"version":3,"names":["React","Button","ButtonVariant","css","styles","AttentionBellIcon","BellIcon","NotificationBadgeVariant","NotificationBadge","_a","isRead","children","variant","count","attentionIcon","createElement","icon","className","isExpanded","props","__rest","notificationChild","undefined","attention","Object","assign","plain","notificationBadge","modifiers","expanded","notificationBadgeCount","displayName"],"sources":["../../../../src/components/NotificationBadge/NotificationBadge.tsx"],"sourcesContent":[null],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,EAAEC,aAAa,QAAqB,WAAW;AAC9D,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,OAAOC,MAAM,MAAM,8EAA8E;AACjG,OAAOC,iBAAiB,MAAM,4DAA4D;AAC1F,OAAOC,QAAQ,MAAM,kDAAkD;AAEvE,WAAYC,wBAIX;AAJD,WAAYA,wBAAwB;EAClCA,wBAAA,iBAAa;EACbA,wBAAA,qBAAiB;EACjBA,wBAAA,2BAAuB;AACzB,CAAC,EAJWA,wBAAwB,KAAxBA,wBAAwB;AA6BpC,OAAO,MAAMC,iBAAiB,GAAqDC,EAU1D,IAAI;MAVsD;MACjFC,MAAM;MACNC,QAAQ;MACRC,OAAO,GAAGF,MAAM,GAAG,MAAM,GAAG,QAAQ;MACpCG,KAAK,GAAG,CAAC;MACTC,aAAa,GAAGd,KAAA,CAAAe,aAAA,CAACV,iBAAiB,OAAG;MACrCW,IAAI,GAAGhB,KAAA,CAAAe,aAAA,CAACT,QAAQ,OAAG;MACnBW,SAAS;MACTC,UAAU,GAAG;IAAK,IAAAT,EAEK;IADpBU,KAAK,GAAAC,MAAA,CAAAX,EAAA,EATyE,8FAUlF,CADS;EAER,IAAIY,iBAAiB,GAAGL,IAAI;EAC5B,IAAIL,QAAQ,KAAKW,SAAS,EAAE;IAC1BD,iBAAiB,GAAGV,QAAQ;GAC7B,MAAM,IAAIC,OAAO,KAAKL,wBAAwB,CAACgB,SAAS,EAAE;IACzDF,iBAAiB,GAAGP,aAAa;;EAEnC,OACEd,KAAA,CAAAe,aAAA,CAACd,MAAM,EAAAuB,MAAA,CAAAC,MAAA;IAACb,OAAO,EAAEV,aAAa,CAACwB,KAAK;IAAET,SAAS,EAAEA,SAAS;IAAA,iBAAiBC;EAAU,GAAMC,KAAK,GAC9FnB,KAAA,CAAAe,aAAA;IACEE,SAAS,EAAEd,GAAG,CAACC,MAAM,CAACuB,iBAAiB,EAAEvB,MAAM,CAACwB,SAAS,CAAChB,OAAO,CAAC,EAAEM,UAAU,IAAId,MAAM,CAACwB,SAAS,CAACC,QAAQ;EAAC,GAE3GR,iBAAiB,EACjBR,KAAK,GAAG,CAAC,IAAIb,KAAA,CAAAe,aAAA;IAAME,SAAS,EAAEd,GAAG,CAACC,MAAM,CAAC0B,sBAAsB;EAAC,GAAGjB,KAAK,CAAQ,CAC5E,CACA;AAEb,CAAC;AACDL,iBAAiB,CAACuB,WAAW,GAAG,mBAAmB"},"metadata":{},"sourceType":"module"}