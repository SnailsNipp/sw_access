{"ast":null,"code":"var _jsxFileName = \"/media/srv/data/diplom/web_sw_test_with_datatables/src/pages/Terminal/Terminal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport './Terminal.css';\nimport { useParams } from \"react-router-dom\";\nimport { SWITCH_IPS_COLLECTION, switchesMock } from \"../../core/mocks/dormMock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Terminal = () => {\n  _s();\n  const shellinaboxFrameRef = useRef(null);\n  const [switchItem, setSwitchItem] = useState();\n  const {\n    switchId\n  } = useParams();\n  useEffect(() => {\n    if (switchId) {\n      const foundedSwitch = switchesMock[switchId];\n      foundedSwitch.addr_ipv4 = SWITCH_IPS_COLLECTION[switchId];\n      console.log(foundedSwitch);\n      setSwitchItem(foundedSwitch);\n      // const syncedTerminal= sh.sync('http://localhost:43333/');\n\n      foundedSwitch.commands.forEach(command => {});\n    }\n  }, [switchId]);\n\n  // Send input to the Shell In A Box instancontentWindowce\n  const sendInput = command => {\n    // Create a message object containing the input string\n    return {\n      type: 'input',\n      data: command\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"terminal-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n      ref: shellinaboxFrameRef,\n      className: \"terminal\",\n      src: \"http://localhost:43333/\",\n      width: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n};\n_s(Terminal, \"RbPQ/FNmd+OVahkdfVRLTVZjT2Y=\", false, function () {\n  return [useParams];\n});\n_c = Terminal;\nvar _c;\n$RefreshReg$(_c, \"Terminal\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","SWITCH_IPS_COLLECTION","switchesMock","jsxDEV","_jsxDEV","Terminal","_s","shellinaboxFrameRef","switchItem","setSwitchItem","switchId","foundedSwitch","addr_ipv4","console","log","commands","forEach","command","sendInput","type","data","className","children","ref","src","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/srv/data/diplom/web_sw_test_with_datatables/src/pages/Terminal/Terminal.tsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport './Terminal.css';\nimport {ISwitch} from \"../../core/models\";\nimport {useParams} from \"react-router-dom\";\nimport {SWITCH_IPS_COLLECTION, switchesMock} from \"../../core/mocks/dormMock\";\nexport const Terminal = () => {\n    const shellinaboxFrameRef = useRef<any>(null);\n    const [switchItem, setSwitchItem] = useState<ISwitch | undefined>();\n    const { switchId } = useParams();\n    useEffect(() => {\n        if (switchId) {\n            const foundedSwitch= switchesMock[switchId];\n            foundedSwitch.addr_ipv4 = SWITCH_IPS_COLLECTION[switchId];\n            console.log(foundedSwitch);\n            setSwitchItem(foundedSwitch);\n            // const syncedTerminal= sh.sync('http://localhost:43333/');\n\n            foundedSwitch.commands.forEach(command => {\n\n            });\n        }\n    }, [switchId]);\n\n    // Send input to the Shell In A Box instancontentWindowce\n    const sendInput = (command: string) => {\n        // Create a message object containing the input string\n        return {\n            type: 'input',\n            data: command\n        };\n    }\n\n    return <div className=\"terminal-wrapper\">\n        {/* eslint-disable-next-line jsx-a11y/iframe-has-title */}\n        <iframe\n            ref={shellinaboxFrameRef}\n            className=\"terminal\"\n            src=\"http://localhost:43333/\"\n            width=\"100%\"\n        ></iframe>\n    </div>\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AACxD,OAAO,gBAAgB;AAEvB,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,SAAQC,qBAAqB,EAAEC,YAAY,QAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC9E,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,mBAAmB,GAAGT,MAAM,CAAM,IAAI,CAAC;EAC7C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAsB,CAAC;EACnE,MAAM;IAAEW;EAAS,CAAC,GAAGV,SAAS,CAAC,CAAC;EAChCH,SAAS,CAAC,MAAM;IACZ,IAAIa,QAAQ,EAAE;MACV,MAAMC,aAAa,GAAET,YAAY,CAACQ,QAAQ,CAAC;MAC3CC,aAAa,CAACC,SAAS,GAAGX,qBAAqB,CAACS,QAAQ,CAAC;MACzDG,OAAO,CAACC,GAAG,CAACH,aAAa,CAAC;MAC1BF,aAAa,CAACE,aAAa,CAAC;MAC5B;;MAEAA,aAAa,CAACI,QAAQ,CAACC,OAAO,CAACC,OAAO,IAAI,CAE1C,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMQ,SAAS,GAAID,OAAe,IAAK;IACnC;IACA,OAAO;MACHE,IAAI,EAAE,OAAO;MACbC,IAAI,EAAEH;IACV,CAAC;EACL,CAAC;EAED,oBAAOb,OAAA;IAAKiB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAEpClB,OAAA;MACImB,GAAG,EAAEhB,mBAAoB;MACzBc,SAAS,EAAC,UAAU;MACpBG,GAAG,EAAC,yBAAyB;MAC7BC,KAAK,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AACV,CAAC;AAAAvB,EAAA,CApCYD,QAAQ;EAAA,QAGIL,SAAS;AAAA;AAAA8B,EAAA,GAHrBzB,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}