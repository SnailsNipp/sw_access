{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/NotificationDrawer/notification-drawer';\nimport maxLines from '@patternfly/react-tokens/dist/esm/c_notification_drawer__group_toggle_title_max_lines';\nimport { Badge } from '../Badge';\nimport { Tooltip } from '../Tooltip';\nexport const NotificationDrawerGroup = _a => {\n  var {\n      children,\n      className = '',\n      count,\n      isExpanded,\n      isRead = false,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onExpand = (event, expanded) => undefined,\n      title,\n      truncateTitle = 0,\n      tooltipPosition,\n      headingLevel: HeadingLevel = 'h1'\n    } = _a,\n    props = __rest(_a, [\"children\", \"className\", \"count\", \"isExpanded\", \"isRead\", \"onExpand\", \"title\", \"truncateTitle\", \"tooltipPosition\", \"headingLevel\"]);\n  const titleRef = React.useRef(null);\n  const [isTooltipVisible, setIsTooltipVisible] = React.useState(false);\n  React.useEffect(() => {\n    // Title will always truncate on overflow regardless of truncateTitle prop\n    const showTooltip = titleRef.current && titleRef.current.offsetHeight < titleRef.current.scrollHeight;\n    if (isTooltipVisible !== showTooltip) {\n      setIsTooltipVisible(showTooltip);\n    }\n    if (!titleRef.current || !truncateTitle) {\n      return;\n    }\n    titleRef.current.style.setProperty(maxLines.name, truncateTitle.toString());\n  }, [titleRef, truncateTitle, isTooltipVisible]);\n  const Title = React.createElement(\"div\", Object.assign({}, isTooltipVisible && {\n    tabIndex: 0\n  }, {\n    ref: titleRef,\n    className: css(styles.notificationDrawerGroupToggleTitle)\n  }), title);\n  return React.createElement(\"section\", Object.assign({}, props, {\n    className: css(styles.notificationDrawerGroup, isExpanded && styles.modifiers.expanded, className)\n  }), React.createElement(HeadingLevel, null, React.createElement(\"button\", {\n    className: css(styles.notificationDrawerGroupToggle),\n    \"aria-expanded\": isExpanded,\n    onClick: e => onExpand(e, !isExpanded),\n    onKeyDown: e => {\n      if (e.key === 'Enter' || e.key === ' ') {\n        e.preventDefault();\n        onExpand(e, !isExpanded);\n      }\n    }\n  }, isTooltipVisible ? React.createElement(Tooltip, {\n    content: title,\n    position: tooltipPosition\n  }, Title) : Title, React.createElement(\"div\", {\n    className: css(styles.notificationDrawerGroupToggleCount)\n  }, React.createElement(Badge, {\n    isRead: isRead\n  }, count)), React.createElement(\"span\", {\n    className: \"pf-c-notification-drawer__group-toggle-icon\"\n  }, React.createElement(AngleRightIcon, null)))), children);\n};\nNotificationDrawerGroup.displayName = 'NotificationDrawerGroup';","map":{"version":3,"names":["React","AngleRightIcon","css","styles","maxLines","Badge","Tooltip","NotificationDrawerGroup","_a","children","className","count","isExpanded","isRead","onExpand","event","expanded","undefined","title","truncateTitle","tooltipPosition","headingLevel","HeadingLevel","props","__rest","titleRef","useRef","isTooltipVisible","setIsTooltipVisible","useState","useEffect","showTooltip","current","offsetHeight","scrollHeight","style","setProperty","name","toString","Title","createElement","Object","assign","tabIndex","ref","notificationDrawerGroupToggleTitle","notificationDrawerGroup","modifiers","notificationDrawerGroupToggle","onClick","e","onKeyDown","key","preventDefault","content","position","notificationDrawerGroupToggleCount","displayName"],"sources":["../../../../src/components/NotificationDrawer/NotificationDrawerGroup.tsx"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}