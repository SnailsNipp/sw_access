{"ast":null,"code":"var _jsxFileName = \"/media/srv/data/diplom/web_sw_test_with_datatables/src/ui/menu/DormFloorList/DormFloorList.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { Menu, MenuContent, MenuGroup, MenuList, MenuItem, Divider } from '@patternfly/react-core';\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport \"./DormFloorList.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DormSwitch = _ref => {\n  let {\n    name,\n    doorName,\n    floorName\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(NavLink, {\n    to: `/${doorName}/${floorName}/${name}`,\n    children: /*#__PURE__*/_jsxDEV(MenuItem, {\n      itemId: name,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n};\n_c = DormSwitch;\nexport const DormFloorList = _ref2 => {\n  _s();\n  let {\n    floors,\n    doorName\n  } = _ref2;\n  const [activeItem, setActiveItem] = React.useState();\n  const onSelect = (_event, itemId) => {\n    console.log(`clicked ${itemId}`);\n    setActiveItem(itemId);\n  };\n  // Інтерактивні списки комутаторів із групуванням по поверхам\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    className: \"dorm-list\",\n    onSelect: onSelect,\n    activeItemId: activeItem,\n    children: /*#__PURE__*/_jsxDEV(MenuContent, {\n      children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), floors.map((floor, idx) => {\n        if (!(floor !== null && floor !== void 0 && floor.switches)) {\n          return /*#__PURE__*/_jsxDEV(MenuGroup, {\n            children: /*#__PURE__*/_jsxDEV(MenuList, {\n              children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                to: \"#\",\n                itemId: 0,\n                children: \"Central\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 32\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(MenuGroup, {\n          label: floor.name,\n          labelHeadingLevel: \"h3\",\n          children: /*#__PURE__*/_jsxDEV(MenuList, {\n            children: (floor === null || floor === void 0 ? void 0 : floor.switches) && (floor === null || floor === void 0 ? void 0 : floor.switches.map(switchItem => /*#__PURE__*/_jsxDEV(DormSwitch, {\n              ...switchItem,\n              floorName: floor.name,\n              doorName: doorName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this)))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(DormFloorList, \"bNsD/rUNTbDQRn+NP6rdDtPLdu0=\");\n_c2 = DormFloorList;\nvar _c, _c2;\n$RefreshReg$(_c, \"DormSwitch\");\n$RefreshReg$(_c2, \"DormFloorList\");","map":{"version":3,"names":["React","Menu","MenuContent","MenuGroup","MenuList","MenuItem","Divider","NavLink","jsxDEV","_jsxDEV","DormSwitch","_ref","name","doorName","floorName","to","children","itemId","fileName","_jsxFileName","lineNumber","columnNumber","_c","DormFloorList","_ref2","_s","floors","activeItem","setActiveItem","useState","onSelect","_event","console","log","className","activeItemId","map","floor","idx","switches","label","labelHeadingLevel","switchItem","_c2","$RefreshReg$"],"sources":["/media/srv/data/diplom/web_sw_test_with_datatables/src/ui/menu/DormFloorList/DormFloorList.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Menu, MenuContent, MenuGroup, MenuList, MenuItem, Divider } from '@patternfly/react-core';\r\nimport \"@patternfly/react-core/dist/styles/base.css\";\r\nimport \"./DormFloorList.css\";\r\nimport {FC} from \"react\";\r\nimport {IFloor, ISwitch} from \"../../../core/models\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ninterface ISwitchLink {\r\n    floorName: string;\r\n    doorName: string;\r\n}\r\nexport const DormSwitch: FC<ISwitch & ISwitchLink> = ({ name, doorName, floorName }) => {\r\n    return <NavLink to={`/${doorName}/${floorName}/${name}`}>\r\n        <MenuItem itemId={name}>{ name }</MenuItem>\r\n    </NavLink>\r\n}\r\n\r\nexport const DormFloorList: FC<{ floors: IFloor[], doorName: string }> = ({ floors, doorName }) => {\r\n    const [activeItem, setActiveItem] = React.useState<string | number | undefined>();\r\n    const onSelect = (_event: React.MouseEvent<Element, MouseEvent> | undefined, itemId: string | number | undefined) => {\r\n        console.log(`clicked ${itemId}`);\r\n        setActiveItem(itemId);\r\n    };\r\n// Інтерактивні списки комутаторів із групуванням по поверхам\r\n    return (\r\n        <Menu className=\"dorm-list\" onSelect={onSelect} activeItemId={activeItem}>\r\n            <MenuContent>\r\n                {/*група*/}\r\n                {/*гарна полосочка*/}\r\n                <Divider />\r\n                {floors.map((floor, idx) => {\r\n                    if (!floor?.switches) {\r\n                        return <MenuGroup>\r\n                            {/*список елементів групи*/}\r\n                            <MenuList>\r\n                                {/*елемент групи із посиланням на дію\\сторінку\\тощо*/}\r\n                                <MenuItem to=\"#\" itemId={0}>\r\n                                    Central\r\n                                </MenuItem>\r\n                            </MenuList>\r\n                        </MenuGroup>\r\n                    }\r\n                    return <MenuGroup label={floor.name} labelHeadingLevel=\"h3\">\r\n                        <MenuList>\r\n                            {floor?.switches && floor?.switches.map(switchItem =>\r\n                                <DormSwitch {...switchItem} floorName={floor.name} doorName={doorName} />)}\r\n                        </MenuList>\r\n                    </MenuGroup>\r\n                    }\r\n                )}\r\n            </MenuContent>\r\n        </Menu>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}