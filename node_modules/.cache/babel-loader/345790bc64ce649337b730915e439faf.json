{"ast":null,"code":"var _jsxFileName = \"/media/srv/data/diplom/web_sw_test_with_datatables/src/pages/SwitchDetails/SwitchDetails.tsx\",\n  _s = $RefreshSig$();\nimport { NavLink, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { FLOOR_IDS_COLLECTION, floorsMock, SWITCH_IPS_COLLECTION, switchesMock } from \"../../core/mocks/dormMock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SwitchDetails = () => {\n  _s();\n  const [switchItem, setSwitchItem] = useState();\n  const {\n    switchId\n  } = useParams();\n  useEffect(() => {\n    if (switchId) {\n      const foundedSwitch = switchesMock[switchId] || floorsMock[FLOOR_IDS_COLLECTION.CENTRAL];\n      foundedSwitch.addr_ipv4 = SWITCH_IPS_COLLECTION[switchId];\n      setSwitchItem(foundedSwitch);\n    }\n  }, [switchId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"IP \", switchItem === null || switchItem === void 0 ? void 0 : switchItem.addr_ipv4, /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"./terminal\",\n      state: {\n        addr_ipv4: switchItem === null || switchItem === void 0 ? void 0 : switchItem.addr_ipv4\n      },\n      children: \"Navigate to Terminal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(SwitchDetails, \"gc7a05rOZY0Il+PapV4kddgCwgg=\", false, function () {\n  return [useParams];\n});\n_c = SwitchDetails;\nvar _c;\n$RefreshReg$(_c, \"SwitchDetails\");","map":{"version":3,"names":["NavLink","useParams","useEffect","useState","FLOOR_IDS_COLLECTION","floorsMock","SWITCH_IPS_COLLECTION","switchesMock","jsxDEV","_jsxDEV","Fragment","_Fragment","SwitchDetails","_s","switchItem","setSwitchItem","switchId","foundedSwitch","CENTRAL","addr_ipv4","children","to","state","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/srv/data/diplom/web_sw_test_with_datatables/src/pages/SwitchDetails/SwitchDetails.tsx"],"sourcesContent":["import {NavLink, useParams} from \"react-router-dom\";\nimport {useEffect, useState} from \"react\";\nimport {ISwitch} from \"../../core/models\";\nimport {FLOOR_IDS_COLLECTION, floorsMock, SWITCH_IPS_COLLECTION, switchesMock} from \"../../core/mocks/dormMock\";\n\n\nexport const SwitchDetails = () => {\n    const [switchItem, setSwitchItem] = useState<ISwitch | undefined>();\n    const { switchId } = useParams();\n    useEffect(() => {\n        if (switchId) {\n            const foundedSwitch = switchesMock[switchId] || floorsMock[FLOOR_IDS_COLLECTION.CENTRAL];\n            foundedSwitch.addr_ipv4 = SWITCH_IPS_COLLECTION[switchId];\n            setSwitchItem(foundedSwitch);\n        }\n    }, [switchId])\n    return <>\n        IP {switchItem?.addr_ipv4}\n        <NavLink to='./terminal' state={{ addr_ipv4: switchItem?.addr_ipv4 }}>Navigate to Terminal</NavLink>\n    </>\n}"],"mappings":";;AAAA,SAAQA,OAAO,EAAEC,SAAS,QAAO,kBAAkB;AACnD,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEzC,SAAQC,oBAAoB,EAAEC,UAAU,EAAEC,qBAAqB,EAAEC,YAAY,QAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGhH,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAsB,CAAC;EACnE,MAAM;IAAEa;EAAS,CAAC,GAAGf,SAAS,CAAC,CAAC;EAChCC,SAAS,CAAC,MAAM;IACZ,IAAIc,QAAQ,EAAE;MACV,MAAMC,aAAa,GAAGV,YAAY,CAACS,QAAQ,CAAC,IAAIX,UAAU,CAACD,oBAAoB,CAACc,OAAO,CAAC;MACxFD,aAAa,CAACE,SAAS,GAAGb,qBAAqB,CAACU,QAAQ,CAAC;MACzDD,aAAa,CAACE,aAAa,CAAC;IAChC;EACJ,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EACd,oBAAOP,OAAA,CAAAE,SAAA;IAAAS,QAAA,GAAE,KACF,EAACN,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEK,SAAS,eACzBV,OAAA,CAACT,OAAO;MAACqB,EAAE,EAAC,YAAY;MAACC,KAAK,EAAE;QAAEH,SAAS,EAAEL,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEK;MAAU,CAAE;MAAAC,QAAA,EAAC;IAAoB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA,eACtG,CAAC;AACP,CAAC;AAAAb,EAAA,CAdYD,aAAa;EAAA,QAEDX,SAAS;AAAA;AAAA0B,EAAA,GAFrBf,aAAa;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}