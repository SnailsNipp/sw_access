{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { KeyTypes } from '../../helpers/constants';\nimport styles from '@patternfly/react-styles/css/components/OptionsMenu/options-menu';\nimport { DropdownContext } from '../Dropdown';\nexport const OptionsMenuToggleWithText = _a => {\n  var {\n      parentId = '',\n      toggleText,\n      toggleTextClassName = '',\n      toggleButtonContents,\n      toggleButtonContentsClassName = '',\n      onToggle = () => null,\n      isOpen = false,\n      isPlain = false,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      isText = true,\n      isDisabled = false,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      isActive = false,\n      'aria-haspopup': ariaHasPopup,\n      parentRef,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      getMenuRef,\n      onEnter,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      'aria-label': ariaLabel = 'Options menu'\n    } = _a,\n    props = __rest(_a, [\"parentId\", \"toggleText\", \"toggleTextClassName\", \"toggleButtonContents\", \"toggleButtonContentsClassName\", \"onToggle\", \"isOpen\", \"isPlain\", \"isText\", \"isDisabled\", \"isActive\", 'aria-haspopup', \"parentRef\", \"getMenuRef\", \"onEnter\", 'aria-label']);\n  const buttonRef = React.useRef();\n  React.useEffect(() => {\n    document.addEventListener('mousedown', onDocClick);\n    document.addEventListener('touchstart', onDocClick);\n    document.addEventListener('keydown', onEscPress);\n    return () => {\n      document.removeEventListener('mousedown', onDocClick);\n      document.removeEventListener('touchstart', onDocClick);\n      document.removeEventListener('keydown', onEscPress);\n    };\n  });\n  const onDocClick = event => {\n    if (isOpen && parentRef && parentRef.current && !parentRef.current.contains(event.target)) {\n      onToggle(false);\n      buttonRef.current.focus();\n    }\n  };\n  const onKeyDown = event => {\n    if (event.key === 'Tab' && !isOpen) {\n      return;\n    }\n    event.preventDefault();\n    if ((event.key === 'Enter' || event.key === ' ') && isOpen) {\n      onToggle(!isOpen);\n    } else if ((event.key === 'Enter' || event.key === ' ') && !isOpen) {\n      onToggle(!isOpen);\n      onEnter(event);\n    }\n  };\n  const onEscPress = event => {\n    if (isOpen && (event.key === KeyTypes.Escape || event.key === 'Tab') && parentRef && parentRef.current && parentRef.current.contains(event.target)) {\n      onToggle(false);\n      buttonRef.current.focus();\n    }\n  };\n  return React.createElement(DropdownContext.Consumer, null, _ref => {\n    let {\n      id: contextId\n    } = _ref;\n    return React.createElement(\"div\", Object.assign({\n      className: css(styles.optionsMenuToggle, styles.modifiers.text, isPlain && styles.modifiers.plain, isDisabled && styles.modifiers.disabled, isActive && styles.modifiers.active)\n    }, props), React.createElement(\"span\", {\n      className: css(styles.optionsMenuToggleText, toggleTextClassName)\n    }, toggleText), React.createElement(\"button\", {\n      className: css(styles.optionsMenuToggleButton, toggleButtonContentsClassName),\n      id: parentId ? `${parentId}-toggle` : `${contextId}-toggle`,\n      \"aria-haspopup\": \"listbox\",\n      \"aria-label\": ariaLabel,\n      \"aria-expanded\": isOpen,\n      ref: buttonRef,\n      disabled: isDisabled,\n      onClick: () => onToggle(!isOpen),\n      onKeyDown: onKeyDown\n    }, React.createElement(\"span\", {\n      className: css(styles.optionsMenuToggleButtonIcon)\n    }, toggleButtonContents)));\n  });\n};\nOptionsMenuToggleWithText.displayName = 'OptionsMenuToggleWithText';","map":{"version":3,"names":["React","css","KeyTypes","styles","DropdownContext","OptionsMenuToggleWithText","_a","parentId","toggleText","toggleTextClassName","toggleButtonContents","toggleButtonContentsClassName","onToggle","isOpen","isPlain","isText","isDisabled","isActive","ariaHasPopup","parentRef","getMenuRef","onEnter","ariaLabel","props","__rest","buttonRef","useRef","useEffect","document","addEventListener","onDocClick","onEscPress","removeEventListener","event","current","contains","target","focus","onKeyDown","key","preventDefault","Escape","createElement","Consumer","_ref","id","contextId","Object","assign","className","optionsMenuToggle","modifiers","text","plain","disabled","active","optionsMenuToggleText","optionsMenuToggleButton","ref","onClick","optionsMenuToggleButtonIcon","displayName"],"sources":["../../../../src/components/OptionsMenu/OptionsMenuToggleWithText.tsx"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}