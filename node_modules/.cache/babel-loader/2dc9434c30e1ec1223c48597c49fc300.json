{"ast":null,"code":"import getBasePlacement from '../utils/getBasePlacement';\nimport { top, left, right, placements } from '../enums';\n/**\n * @param placement\n * @param rects\n * @param offset\n */\nexport function distanceAndSkiddingToXY(placement, rects, offset) {\n  const basePlacement = getBasePlacement(placement);\n  const invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n  let [skidding, distance] = typeof offset === 'function' ? offset(Object.assign(Object.assign({}, rects), {\n    placement\n  })) : offset;\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n/**\n *\n */\nfunction offset(_ref) {\n  let {\n    state,\n    options,\n    name\n  } = _ref;\n  const {\n    offset = [0, 0]\n  } = options;\n  const data = placements.reduce((acc, placement) => {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  const {\n    x,\n    y\n  } = data[state.placement];\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n  state.modifiersData[name] = data;\n}\nexport default {\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n};","map":{"version":3,"names":["getBasePlacement","top","left","right","placements","distanceAndSkiddingToXY","placement","rects","offset","basePlacement","invertDistance","indexOf","skidding","distance","Object","assign","x","y","_ref","state","options","name","data","reduce","acc","modifiersData","popperOffsets","enabled","phase","requires","fn"],"sources":["../../../../../../../src/helpers/Popper/thirdparty/popper-core/modifiers/offset.ts"],"sourcesContent":[null],"mappings":"AAGA,OAAOA,gBAAgB,MAAM,2BAA2B;AACxD,SAASC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,UAAU,QAAQ,UAAU;AAevD;;;;;AAKA,OAAM,SAAUC,uBAAuBA,CACrCC,SAAoB,EACpBC,KAAwC,EACxCC,MAAc;EAEd,MAAMC,aAAa,GAAGT,gBAAgB,CAACM,SAAS,CAAC;EACjD,MAAMI,cAAc,GAAG,CAACR,IAAI,EAAED,GAAG,CAAC,CAACU,OAAO,CAACF,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;EAEvE,IAAI,CAACG,QAAQ,EAAEC,QAAQ,CAAC,GACtB,OAAOL,MAAM,KAAK,UAAU,GACxBA,MAAM,CAAAM,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACDR,KAAK;IACRD;EAAS,GACT,GACFE,MAAM;EAEZI,QAAQ,GAAGA,QAAQ,IAAI,CAAC;EACxBC,QAAQ,GAAG,CAACA,QAAQ,IAAI,CAAC,IAAIH,cAAc;EAE3C,OAAO,CAACR,IAAI,EAAEC,KAAK,CAAC,CAACQ,OAAO,CAACF,aAAa,CAAC,IAAI,CAAC,GAAG;IAAEO,CAAC,EAAEH,QAAQ;IAAEI,CAAC,EAAEL;EAAQ,CAAE,GAAG;IAAEI,CAAC,EAAEJ,QAAQ;IAAEK,CAAC,EAAEJ;EAAQ,CAAE;AAChH;AAEA;;;AAGA,SAASL,MAAMA,CAAAU,IAAA,EAAqD;EAAA,IAApD;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAI,CAA8B,GAAAH,IAAA;EAClE,MAAM;IAAEV,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC;EAAC,CAAE,GAAGY,OAAO;EAEnC,MAAME,IAAI,GAAGlB,UAAU,CAACmB,MAAM,CAAC,CAACC,GAAG,EAAElB,SAAS,KAAI;IAChDkB,GAAG,CAAClB,SAAS,CAAC,GAAGD,uBAAuB,CAACC,SAAS,EAAEa,KAAK,CAACZ,KAAK,EAAEC,MAAM,CAAC;IACxE,OAAOgB,GAAG;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM;IAAER,CAAC;IAAEC;EAAC,CAAE,GAAGK,IAAI,CAACH,KAAK,CAACb,SAAS,CAAC;EAEtC,IAAIa,KAAK,CAACM,aAAa,CAACC,aAAa,IAAI,IAAI,EAAE;IAC7CP,KAAK,CAACM,aAAa,CAACC,aAAa,CAACV,CAAC,IAAIA,CAAC;IACxCG,KAAK,CAACM,aAAa,CAACC,aAAa,CAACT,CAAC,IAAIA,CAAC;;EAG1CE,KAAK,CAACM,aAAa,CAACJ,IAAI,CAAC,GAAGC,IAAI;AAClC;AAIA,eAAe;EACbD,IAAI,EAAE,QAAQ;EACdM,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE,MAAM;EACbC,QAAQ,EAAE,CAAC,eAAe,CAAC;EAC3BC,EAAE,EAAEtB;CACa"},"metadata":{},"sourceType":"module"}